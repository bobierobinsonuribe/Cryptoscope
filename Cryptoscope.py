import requests
from datetime import datetime, timedelta
import time

ETHERSCAN_API_KEY = "YourApiKeyHere"
ETHERSCAN_API_URL = "https://api.etherscan.io/api"


class CryptoTracker:
    def __init__(self, address: str):
        self.address = address.lower()
        self.session = requests.Session()

    def get_transactions(self):
        params = {
            "module": "account",
            "action": "txlist",
            "address": self.address,
            "startblock": 0,
            "endblock": 99999999,
            "sort": "desc",
            "apikey": ETHERSCAN_API_KEY,
        }
        response = self.session.get(ETHERSCAN_API_URL, params=params)
        data = response.json()
        if data["status"] != "1":
            raise ValueError("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:", data.get("message"))
        return data["result"]

    def analyze(self, transactions):
        alerts = []

        for tx in transactions:
            to_addr = tx["to"].lower()
            from_addr = tx["from"].lower()
            gas_price = int(tx["gasPrice"]) / 1e9  # –≤ Gwei
            is_contract = tx["input"] != "0x"
            timestamp = datetime.fromtimestamp(int(tx["timeStamp"]))

            # 1. –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –º–µ–∂–¥—É –∞–¥—Ä–µ—Å–∞–º–∏
            if from_addr == self.address and to_addr != self.address:
                delay = datetime.now() - timestamp
                if delay < timedelta(minutes=5):
                    alerts.append(f"‚ö† –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ {delay.seconds} —Å–µ–∫—É–Ω–¥ –Ω–∞ {to_addr}")

            # 2. –°–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è
            if gas_price > 300:
                alerts.append(f"‚ö† –ê–Ω–æ–º–∞–ª—å–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è: {gas_price:.2f} Gwei")

            # 3. –î–µ–Ω—å–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
            if to_addr == self.address:
                txs_from_sender = [t for t in transactions if t["from"].lower() == from_addr]
                if len(txs_from_sender) == 1:
                    alerts.append(f"‚ö† –°—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç —Å–≤–µ–∂–µ–≥–æ –∞–¥—Ä–µ—Å–∞: {from_addr}")

            # 4. –í—ã–∑–æ–≤ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
            if is_contract:
                alerts.append(f"‚ö† –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º. Hash: {tx['hash']}")

        return alerts


def scan_wallet(address):
    tracker = CryptoTracker(address)
    print(f"üì° –ê–Ω–∞–ª–∏–∑ –∫–æ—à–µ–ª—å–∫–∞ {address}...")
    txs = tracker.get_transactions()
    issues = tracker.analyze(txs)
    if not issues:
        print("‚úÖ –ù–∏—á–µ–≥–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.")
    else:
        print("\n".join(issues))
